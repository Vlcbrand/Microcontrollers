
week1_B6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000174  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001c8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001f8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000238  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000172  00000000  00000000  00000260  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000010b  00000000  00000000  000003d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001dd  00000000  00000000  000004dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000006bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001a0  00000000  00000000  000006f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000018e  00000000  00000000  00000890  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00000a1e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	13 d0       	rcall	.+38     	; 0xc0 <main>
  9a:	6a c0       	rjmp	.+212    	; 0x170 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <wait>:
 */ 
#include <avr/io.h>
#include <util/delay.h>

void wait( int ms ){
	for (int i=0; i<ms; i++)
  9e:	18 16       	cp	r1, r24
  a0:	19 06       	cpc	r1, r25
  a2:	6c f4       	brge	.+26     	; 0xbe <wait+0x20>
  a4:	20 e0       	ldi	r18, 0x00	; 0
  a6:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a8:	e9 ef       	ldi	r30, 0xF9	; 249
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	31 97       	sbiw	r30, 0x01	; 1
  ae:	f1 f7       	brne	.-4      	; 0xac <wait+0xe>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <wait+0x14>
  b2:	00 00       	nop
  b4:	2f 5f       	subi	r18, 0xFF	; 255
  b6:	3f 4f       	sbci	r19, 0xFF	; 255
  b8:	28 17       	cp	r18, r24
  ba:	39 07       	cpc	r19, r25
  bc:	a9 f7       	brne	.-22     	; 0xa8 <wait+0xa>
  be:	08 95       	ret

000000c0 <main>:
	}
}

int main(void)
{
    DDRD = 0b11111111;
  c0:	8f ef       	ldi	r24, 0xFF	; 255
  c2:	81 bb       	out	0x11, r24	; 17
	DDRC = 0b00000000;
  c4:	14 ba       	out	0x14, r1	; 20

	int pressed = 0;
    int count = 0;
  c6:	c0 e0       	ldi	r28, 0x00	; 0
  c8:	d0 e0       	ldi	r29, 0x00	; 0
int main(void)
{
    DDRD = 0b11111111;
	DDRC = 0b00000000;

	int pressed = 0;
  ca:	00 e0       	ldi	r16, 0x00	; 0
  cc:	10 e0       	ldi	r17, 0x00	; 0
  ce:	ee 24       	eor	r14, r14
  d0:	e3 94       	inc	r14
  d2:	f1 2c       	mov	r15, r1
			else{
				PORTD = 0b00000000;
			}

			if(count == 500){
			count =0 ;
  d4:	c1 2c       	mov	r12, r1
  d6:	d1 2c       	mov	r13, r1
				
		}
	 
		if(pressed == 1){
			if(count < 250){
				PORTD = 0b10000000;
  d8:	68 94       	set
  da:	aa 24       	eor	r10, r10
  dc:	a7 f8       	bld	r10, 7
	while (1) 
    {
		count++;
		if(PINC & 0b00000001)
		{
		if(pressed == 1){
  de:	bb 24       	eor	r11, r11
  e0:	b3 94       	inc	r11
  e2:	91 2c       	mov	r9, r1
	int pressed = 0;
    int count = 0;

	while (1) 
    {
		count++;
  e4:	21 96       	adiw	r28, 0x01	; 1
		if(PINC & 0b00000001)
  e6:	98 9b       	sbis	0x13, 0	; 19
  e8:	0b c0       	rjmp	.+22     	; 0x100 <main+0x40>
		{
		if(pressed == 1){
  ea:	8b 2d       	mov	r24, r11
  ec:	01 30       	cpi	r16, 0x01	; 1
  ee:	11 05       	cpc	r17, r1
  f0:	09 f4       	brne	.+2      	; 0xf4 <main+0x34>
  f2:	89 2d       	mov	r24, r9
			 pressed = 0;
			 
		}else{
		pressed=1;
  f4:	08 2f       	mov	r16, r24
  f6:	10 e0       	ldi	r17, 0x00	; 0
		count = 0;

		}
	
	
		if(pressed == 0)
  f8:	01 15       	cp	r16, r1
  fa:	11 05       	cpc	r17, r1
  fc:	49 f0       	breq	.+18     	; 0x110 <main+0x50>
  fe:	32 c0       	rjmp	.+100    	; 0x164 <main+0xa4>
 100:	01 15       	cp	r16, r1
 102:	11 05       	cpc	r17, r1
 104:	89 f4       	brne	.+34     	; 0x128 <main+0x68>
		{
			if(count < 1000){
 106:	c8 3e       	cpi	r28, 0xE8	; 232
 108:	83 e0       	ldi	r24, 0x03	; 3
 10a:	d8 07       	cpc	r29, r24
 10c:	2c f4       	brge	.+10     	; 0x118 <main+0x58>
 10e:	02 c0       	rjmp	.+4      	; 0x114 <main+0x54>
			 pressed = 0;
			 
		}else{
		pressed=1;
		}
		count = 0;
 110:	cc 2d       	mov	r28, r12
 112:	dd 2d       	mov	r29, r13
	
	
		if(pressed == 0)
		{
			if(count < 1000){
				PORTD = 0b10000000;
 114:	a2 ba       	out	0x12, r10	; 18
 116:	01 c0       	rjmp	.+2      	; 0x11a <main+0x5a>
			}else{
				PORTD = 0b00000000;
 118:	12 ba       	out	0x12, r1	; 18
			}

			if(count == 2000){
 11a:	c0 3d       	cpi	r28, 0xD0	; 208
 11c:	87 e0       	ldi	r24, 0x07	; 7
 11e:	d8 07       	cpc	r29, r24
 120:	f1 f4       	brne	.+60     	; 0x15e <main+0x9e>
				count = 0;
 122:	cc 2d       	mov	r28, r12
 124:	dd 2d       	mov	r29, r13
 126:	1b c0       	rjmp	.+54     	; 0x15e <main+0x9e>
			}
				
		}
	 
		if(pressed == 1){
 128:	01 30       	cpi	r16, 0x01	; 1
 12a:	11 05       	cpc	r17, r1
 12c:	a1 f4       	brne	.+40     	; 0x156 <main+0x96>
			if(count < 250){
 12e:	ca 3f       	cpi	r28, 0xFA	; 250
 130:	d1 05       	cpc	r29, r1
 132:	2c f4       	brge	.+10     	; 0x13e <main+0x7e>
 134:	02 c0       	rjmp	.+4      	; 0x13a <main+0x7a>
			 pressed = 0;
			 
		}else{
		pressed=1;
		}
		count = 0;
 136:	cc 2d       	mov	r28, r12
 138:	dd 2d       	mov	r29, r13
				
		}
	 
		if(pressed == 1){
			if(count < 250){
				PORTD = 0b10000000;
 13a:	a2 ba       	out	0x12, r10	; 18
 13c:	01 c0       	rjmp	.+2      	; 0x140 <main+0x80>
			}
			else{
				PORTD = 0b00000000;
 13e:	12 ba       	out	0x12, r1	; 18
			}

			if(count == 500){
 140:	c4 3f       	cpi	r28, 0xF4	; 244
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	d8 07       	cpc	r29, r24
 146:	29 f4       	brne	.+10     	; 0x152 <main+0x92>
 148:	0e 2d       	mov	r16, r14
 14a:	1f 2d       	mov	r17, r15
			count =0 ;
 14c:	cc 2d       	mov	r28, r12
 14e:	dd 2d       	mov	r29, r13
 150:	02 c0       	rjmp	.+4      	; 0x156 <main+0x96>
 152:	0e 2d       	mov	r16, r14
 154:	1f 2d       	mov	r17, r15
			}

		}
		
		wait(1);
 156:	8e 2d       	mov	r24, r14
 158:	9f 2d       	mov	r25, r15
 15a:	a1 df       	rcall	.-190    	; 0x9e <wait>

    }
 15c:	c3 cf       	rjmp	.-122    	; 0xe4 <main+0x24>
			else{
				PORTD = 0b00000000;
			}

			if(count == 500){
			count =0 ;
 15e:	0c 2d       	mov	r16, r12
 160:	1d 2d       	mov	r17, r13
 162:	f9 cf       	rjmp	.-14     	; 0x156 <main+0x96>
				count = 0;
			}
				
		}
	 
		if(pressed == 1){
 164:	01 30       	cpi	r16, 0x01	; 1
 166:	11 05       	cpc	r17, r1
 168:	31 f3       	breq	.-52     	; 0x136 <main+0x76>
			 pressed = 0;
			 
		}else{
		pressed=1;
		}
		count = 0;
 16a:	cc 2d       	mov	r28, r12
 16c:	dd 2d       	mov	r29, r13
 16e:	f3 cf       	rjmp	.-26     	; 0x156 <main+0x96>

00000170 <_exit>:
 170:	f8 94       	cli

00000172 <__stop_program>:
 172:	ff cf       	rjmp	.-2      	; 0x172 <__stop_program>
